---
import type { GetStaticPaths } from "astro";
import Layout from "@layouts/Layout.astro";
import { DAYS } from "@data/DAYS";
import { normalizePath } from "@utils/normalizePath";
import ScheduleByTime from "@components/ScheduleByTime.astro";
import { MoreInfoPanel } from "@components/MoreInfoPanel";

export const getStaticPaths = (() => {
  return DAYS.map(({ day, color, schedule }) => {
    const path = normalizePath(day);
    const restOfDays = DAYS.map((otherDays) => {
      if (otherDays.day === day) return;

      return {
        day: otherDays.day,
        path: normalizePath(otherDays.day),
        hover: otherDays.color.background,
      };
    }).filter((d) => d !== undefined);
    return {
      params: { day: path },
      props: { day, color, schedule, restOfDays, path },
    };
  });
}) satisfies GetStaticPaths;

const { day, color, schedule, restOfDays, path } = Astro.props;

const times = Object.keys(schedule);
---

<Layout title={day}>
  <main
    class="w-full h-full grid grid-cols-[auto] xl:grid-cols-[auto_480px] py-[calc(var(--footer-height)+2rem)] px-2 md:px-14 gap-16"
  >
    <article class="flex flex-col gap-12">
      <header class="flex gap-8 h-fit pt-4 items-center flex-col md:flex-row">
        <h1
          transition:name=`day-${path}`
          class:list={[
            color.background,
            "text-center text-secondary px-10 h-fit py-2 md:py-3 text-4xl md:text-6xl font-black uppercase md:min-w-[430px] order-last md:order-first",
          ]}
        >
          {day}
        </h1>
        <nav
          class="flex gap-2 2xl:gap-8 justify-center md:items-end flex-wrap md:self-end"
        >
          {
            restOfDays.map((day) => (
              <a
                class:list={[
                  "font-bold text-xl duration-100 text-secondary px-2 md:min-w-32 text-center",
                  day?.hover,
                ]}
                href={`/${day?.path}`}
              >
                {day?.day}
              </a>
            ))
          }
        </nav>
      </header>
      <section class="grid gap-24">
        {
          times.map((time) => {
            const activities = schedule[time];
            return (
              <ScheduleByTime color={color} time={time} schedule={activities} />
            );
          })
        }
      </section>
    </article>
    <article class="w-full h-full relative" id="more-info-panel-wrapper">
      <MoreInfoPanel client:load />
    </article>
  </main>
</Layout>
